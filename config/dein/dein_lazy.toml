# deinの遅延読み込みの際の条件指定
# on_ft     ファイルタイプがマッチしたとき。String or List
# on_path   パスが一致した時
# on_func   呼び出し機能が一致した時
# on_source プラグインがロードされたとき
# on_cmd    コマンドが一致した時
# on_map    キーが一致した時
# on_i      on_event が奨励
# on_event  eventが発生したら
#           http://vim-jp.org/vimdoc-ja/autocmd.html#autocmd-events

[[plugins]]
repo = 'Shougo/denite.nvim'
hook_source = '''
  call denite#custom#option('_', {
      \ 'auto_accel': v:false,
      \ 'highlight-matched-char': 'DeniteMatchedChar',
      \ 'highlight-matched-range': 'DeniteMatchedRange',
      \ 'highlight-preview-line': 'DenitePreviewLine',
      \ 'auto-highlight': v:false,
      \ 'empty': v:false,
      \ 'prompt': '>',
      \ 'sorter': 'sorter/word',
      \ 'source_names': 'short',
      \ 'unique': v:true,
      \ 'winheight': 20,
      \ })
  call denite#custom#map('insert', "<C-j>", '<denite:move_to_next_line>', 'noremap')
  call denite#custom#map('insert', "<C-k>", '<denite:move_to_previous_line>', 'noremap')
'''
hook_add = '''
  " show buffer
  noremap <C-l> :Denite buffer<CR>

  " Most Recently Used Files
  noremap <C-z> :Denite file_mru<CR>

  " Most Recently Used Files
  noremap <C-p> :Denite file_rec<CR>
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let s:deoplete_custom_option = {
    \ 'auto_complete_delay': 0,
    \ 'auto_refresh_delay': 30,
    \ 'camel_case': v:false,
    \ 'ignore_case': v:true,
    \ 'max_list': 10000,
    \ 'min_pattern_length': 1,
    \ 'on_insert_enter': v:true,
    \ 'on_text_changed_i': v:true,
    \ 'refresh_always': v:false,
    \ 'skip_chars': ['(', ')'],
    \ 'smart_case': v:true,
    \ }
  call deoplete#custom#option(s:deoplete_custom_option)
'''
hook_add = '''
  inoremap <silent><expr><CR>     pumvisible() ? deoplete#mappings#close_popup() : "\<CR>"
  inoremap <silent><expr><Tab>    pumvisible() ? "\<C-n>".deoplete#mappings#close_popup() : "\<Tab>"
  inoremap <silent><expr><C-l>    pumvisible() ? deoplete#mappings#refresh() : "\<C-l>"
  inoremap <silent><expr><C-z>    deoplete#mappings#undo_completion()
'''
on_i = 1

[[plugins]]
repo ='Shougo/defx.nvim'
on_cmd = 'Defx'
hook_add = '''
	nnoremap <silent> <Space>f :<C-u>Defx -listed -resume -buffer-name=tab`tabpagenr()`<CR>
'''

[[plugins]]
repo = 'Shougo/neosnippet'
hook_source = '''
  "imap <C-k> <Plug>(neosnippet_expand_or_jump)
  "smap <C-k> <Plug>(neosnippet_expand_or_jump)
  "xmap <C-k> <Plug>(neosnippet_expand_target)
  imap <expr><C-k> neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : ""
  if has('conceal')
    set conceallevel=1 concealcursor=nv
  endif
'''
on_i  = 1

